#!/bin/bash

. config/pathes

if [ -d $DIR_SOURCE ]; then
  #  build dir
  if [ -d $DIR_BUILD ]; then
    rm -rf $DIR_BUILD
  fi
  mkdir $DIR_BUILD
  cp -PR $DIR_SOURCE/* $DIR_BUILD

  #  patches
  printf "${green}*** PATHES ***${endcolor}\n"

  cp -PR $DIR_PATCHES/$DIR_MEDIA/* $DIR_BUILD/$DIR_MEDIA
  cp -PR $DIR_PATCHES/$DIR_MEDIA_BUILD/* $DIR_BUILD/$DIR_MEDIA_BUILD

  cd $DIR_BUILD/$DIR_MEDIA
  if ls *.patch 1> /dev/null 2>&1; then
    for f in *.patch; do patch -p1 < "$f"; done
  fi

  cd ../..

  cd $DIR_BUILD/$DIR_MEDIA_BUILD
  if ls *.patch 1> /dev/null 2>&1; then
    for f in *.patch; do patch -p1 < "$f"; done
  fi

  #  build
  printf "${green}*** BUILD ***${endcolor}\n"

  make dir DIR=../media

  if [ "$NCONFIG" = "all" ]; then
    make allyesconfig
  else
    # Enable some staging drivers
    make stagingconfig

    # Disable RC/IR support
    sed -i -r 's/(^CONFIG.*_RC.*=)./\1n/g' v4l/.config
    sed -i -r 's/(^CONFIG.*_IR.*=)./\1n/g' v4l/.config
  fi

  make -j$(nproc)

  if [ "$TYPE_INSTALL" = "make" ]; then
    printf "${blue}*** Type install - MAKE ***${endcolor}\n"

    if ls $DIR_KERNEL_UPDATES_EXTRA/* 1> /dev/null 2>&1; then
      sudo rm -rf $DIR_KERNEL_UPDATES_EXTRA
    fi

    sudo make install
  else
    printf "${blue}*** Type install - MODULES ***${endcolor}\n"
    cd ../..

    # modules
    printf "${green}*** MODULES ***${endcolor}\n"

    if [ ! -d $DIR_MODULES ]; then
      mkdir $DIR_MODULES
    fi

    if [ -d $ROOT/$DIR_MODULES/$CUR_KERNEL/$NAME_DATASTAMP$NCONFIG ]; then
      rm -fr $ROOT/$DIR_MODULES/$CUR_KERNEL/$NAME_DATASTAMP$NCONFIG
    fi
    mkdir -p $ROOT/$DIR_MODULES/${CUR_KERNEL}/$NAME_DATASTAMP$NCONFIG

    find "$ROOT/$DIR_BUILD/$DIR_MEDIA_BUILD" -name '*.ko' -exec cp "{}" "$ROOT/$DIR_MODULES/${CUR_KERNEL}/$NAME_DATASTAMP$NCONFIG" \;
  fi
else
  printf "${red}*** No source dir ***${endcolor}\n"
fi